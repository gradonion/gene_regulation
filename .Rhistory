sum(blood_gene_exp_norm[which(blood_gene_exp_norm$Description=='HBG'),-1])
blood_gene_exp_norm$Description[which(blood_gene_exp_norm$Description=='HBG')]
View(blood_TF_gene)
blood_TF_gene[which(blood_TF_gene[,2]=='CD28')]
blood_TF_gene[which(blood_TF_gene[,2]=='CD28'),]
blood_TF_gene[which(blood_TF_gene[,2]=='LY75'),]
LY75 <- blood_TF_gene[which(blood_TF_gene[,2]=='LY75'),]
temp <- LY75[,3]
LY75 <- LY75[order(temp,decreasing = TRUE),]
View(LY75)
for (i in LY75_TF_names){
print(blood_gene_exp$Description[startsWith(blood_gene_exp$Description, as.character(i))] )
}
LY75_TF_names<- LY75[1:10,1]
for (i in LY75_TF_names){
print(blood_gene_exp$Description[startsWith(blood_gene_exp$Description, as.character(i))] )
}
LY75_TF_names<- LY75[,1]
for (i in LY75_TF_names){
print(blood_gene_exp$Description[startsWith(blood_gene_exp$Description, as.character(i))] )
}
LY75_TF_names<- LY75[1:10,1]
LY75_TF_names <- LY75_TF_names[-2]
n = 9
LY75_TF_exp <- data.frame(matrix(nrow = 407, ncol = n))
row.names(LY75_TF_exp) <- HBB_TF_names
for (i in c(1:n)){
LY75_TF_exp[,i] <- t(blood_gene_exp_norm[which(blood_gene_exp_norm$Description
==as.character(LY75_TF_names[i])),-1])
}
LY75_exp <- t(blood_gene_exp_norm[which(blood_gene_exp_norm$Description=='LY75'),-1])
LY75_TF_exp <- cbind(HBB_TF_exp,LY75_exp)
colnames(LY75_TF_exp)[n] <- 'LY75'
row.names(LY75_TF_exp) <- colnames(blood_gene_exp_norm)[-1]
row.names(LY75_TF_exp) <- LY75_TF_names
for (i in c(1:n)){
LY75_TF_exp[,i] <- t(blood_gene_exp_norm[which(blood_gene_exp_norm$Description
==as.character(LY75_TF_names[i])),-1])
}
LY75_exp <- t(blood_gene_exp_norm[which(blood_gene_exp_norm$Description=='LY75'),-1])
LY75_TF_exp <- cbind(LY75_TF_exp,LY75_exp)
colnames(LY75_TF_exp)[n] <- 'LY75'
row.names(LY75_TF_exp) <- colnames(blood_gene_exp_norm)[-1]
View(LY75_TF_exp)
rm(list = 'LY75_TF_exp')
LY75_TF_exp <- data.frame(matrix(nrow = 407, ncol = n))
row.names(LY75_TF_exp) <- LY75_TF_names
for (i in c(1:n)){
LY75_TF_exp[,i] <- t(blood_gene_exp_norm[which(blood_gene_exp_norm$Description
==as.character(LY75_TF_names[i])),-1])
}
LY75_exp <- t(blood_gene_exp_norm[which(blood_gene_exp_norm$Description=='LY75'),-1])
LY75_TF_exp <- cbind(LY75_TF_exp,LY75_exp)
colnames(LY75_TF_exp)[n+1] <- 'LY75'
row.names(LY75_TF_exp) <- colnames(blood_gene_exp_norm)[-1]
View(LY75_TF_exp)
colnames(LY75_TF_exp) <- c(colnames(LY75_TF_exp)[-10],'LY75')
View(LY75_TF_exp)
colnames(LY75_TF_exp) <- c(LY75_TF_names,'LY75')
fit_all13_LY75 <- lm(LY75 ~ ., data = LY75_TF_exp)
summary(fit_all13_LY75)
df <- LY75_TF_exp
response_str <- "LY75 ~ "
end <- length(colnames(df))
R <- colnames(df)[-end] # Initial set of predictors
pval <- rep(NA,length(R)); names(pval) <- R
R_sq <- rep(NA,length(R)); names(R_sq) <- R
for(j in R){
fit <- lm(as.formula(paste0(response_str,j)), data=df)
fitsum <- summary(fit)
pval[j] <- fitsum$coefficients[j,4]
R_sq[j] <- fitsum$r.squared
}
min_pval <- pval[which(pval == min(pval))]
r_sq <- R_sq[which(pval == min(pval))]
R[which(pval == min(pval))]
stats_LY75 <- data.frame(HIF1A = c(min_pval,r_sq),row.names = c("p-val","R-squared"))
fit <- lm(as.formula(paste0(response_str,names(min_pval))), data=df)
R <- R[-which(R == names(min_pval))] # The rest of the predictors
nonstop = TRUE
while(nonstop){
pval <- rep(NA,length(R)); names(pval) <- R
R_sq <- rep(NA,length(R)); names(R_sq) <- R
for(j in R){
fit_loop <- update(fit, as.formula(paste0(".~. +",j)))
fitsum <- summary(fit_loop)
pval[j] <- fitsum$coefficients[j,4]
R_sq[j] <- fitsum$r.squared
}
min_pval <- pval[which(pval == min(pval))]
r_sq <- R_sq[which(pval == min(pval))]
if(min_pval < 0.05){
stats_LY75[,names(min_pval)] <- c(min_pval,r_sq)
fit <- update(fit, as.formula(paste0(".~. +",names(min_pval))))
R <- R[-which(R == names(min_pval))]
}
else{
nonstop = FALSE
forward_model_LY75 <- fit
}
}
stats_LY75
plot(as.matrix(stats_LY75)[2,], pch=16, xlab="Number of Predictors",ylab = "R_2")
summary(forward_model_LY75)
summary(fit_all13_LY75)
sum(blood_gene_exp_norm[which(blood_gene_exp_norm=='LY75'),-1])
log10
log10(0.002068838)
p = 6
R_squared = rep(0,1000)
LY75_TF_control <- data.frame(matrix(nrow = 407, ncol = p))
LY75_TF_control <- cbind(LY75_TF_control,t(LY75_exp))
colnames(LY75_TF_control)[p+1] <- 'LY75'
rand_LY75 = matrix(nrow = 1000, ncol = p)
for (k in c(1:1000)){
rand_LY75[k,] <- sample(c(1:56202),p,replace = FALSE)
rand_LY75_name <- blood_gene_exp_norm$Description[rand_LY75[k,]]
temp <- rand_LY75_name[duplicated(rand_LY75_name)]
while (length(temp)>0){
rand_LY75[k,] <- sample(c(1:56202),p,replace = FALSE)
rand_LY75_name <- blood_gene_exp_norm$Description[rand_LY75[k,]]
temp <- rand_LY75_name[duplicated(rand_LY75_name)]
}
colnames(LY75_TF_control)[1:p] <- rand_LY75_name
for (i in c(1:p)){
LY75_TF_control[,i] <- t(blood_gene_exp_norm[rand_LY75[k,i],-1])
}
fit_control <- summary(lm(LY75 ~. , data = LY75_TF_control))
R_squared[k] = fit_control$r.squared
}
hist(R_squared)
max(R_squared)
summary(R_squared)
p = 6
R_squared = rep(0,1000)
LY75_TF_control <- data.frame(matrix(nrow = 407, ncol = p))
LY75_TF_control <- cbind(LY75_TF_control,t(LY75_exp))
colnames(LY75_TF_control)[p+1] <- 'LY75'
rand_LY75 = matrix(nrow = 1000, ncol = p)
for (k in c(1:1000)){
rand_LY75[k,] <- sample(c(1:56202),p,replace = FALSE)
rand_LY75_name <- blood_gene_exp_norm$Description[rand_LY75[k,]]
temp <- rand_LY75_name[duplicated(rand_LY75_name)]
while (length(temp)>0){
rand_LY75[k,] <- sample(c(1:56202),p,replace = FALSE)
rand_LY75_name <- blood_gene_exp_norm$Description[rand_LY75[k,]]
temp <- rand_LY75_name[duplicated(rand_LY75_name)]
}
colnames(LY75_TF_control)[1:p] <- rand_LY75_name
for (i in c(1:p)){
LY75_TF_control[,i] <- t(blood_gene_exp_norm[rand_LY75[k,i],-1])
}
fit_control <- summary(lm(LY75 ~. , data = LY75_TF_control))
R_squared[k] = fit_control$r.squared
}
hist(R_squared)
summary(forward_model_LY75)
hist(forward_model_LY75$residuals)
qqnorm(forward_model_LY75$residuals,pch=16)
qqline(forward_model_LY75$residuals,col='red')
hist(blood_gene_exp_norm[which(blood_gene_exp_norm$Description==LY75),-1])
hist(blood_gene_exp_norm[which(blood_gene_exp_norm$Description=='LY75'),-1])
hist(LY75_exp)
hist(LY75_exp,breaks = 12)
hist(LY75_exp,breaks = 20)
hist(HBB_exp,breaks = 20)
View(HBB_exp)
hist(t(HBB_exp),breaks = 20)
hist(fit_all13_LY75$residuals)
qqnorm(fit_all13_LY75$residuals,pch=16)
qqline(fit_all13_LY75$residuals,col='red')
library(MASS)
bc <- boxcox(fit_all13_LY75, plot=T, lambda=seq(-1,2,by=0.1))
bc$x[which(bc$y == max(bc$y))]
lambda=0.4
LY75_TF_exp_bc <- LY75_TF_exp
View(LY75_TF_exp_bc)
LY75_TF_exp_bc[,10] <- (LY75_TF_exp[,10]^lambda-1)/lambda
fit_bc_LY75 <- lm(LY75 ~., data)
fit_bc_LY75 <- lm(LY75 ~., data = LY75_TF_exp_bc)
hist(fit_bc_LY75$residuals)
qqnorm(fit_bc_LY75$residuals,pch=16)
qqline(fit_bc_LY75$residuals,col='red')
summary(fit_bc_LY75)
rm(list = 'blood_gene_exp_norm')
load('Users/Downloads/Research/GTEx/blood_gene_exp_norm.Rdata')
load('blood_gene_exp_norm.Rdata')
rm(list = 'blood_gene_exp_norm')
load('/Users/Downloads/Research/GTEx/blood_gene_exp_norm.Rdata')
load('~/Downloads/Research/GTEx/blood_gene_exp_norm.Rdata')
sum_gene <- rowSums(blood_gene_exp_norm[,-1])
sum_gene <- rowSums(blood_gene_exp_norm[,-1])
hist(log10(sum_gene))
summary(sum_gene)
sum_gene <- rowSums(blood_gene_exp_norm[,-1])
hist(log10(sum_gene))
summary(sum_gene)
sum_gene[which(log10(sum_gene)>-1)]
sum_gene[which(log10(sum_gene)>0)]
sum_gene <- rowSums(blood_gene_exp_norm[,-1])
names(sum_gene) <- blood_gene_exp_norm$Description
hist(log10(sum_gene))
summary(sum_gene)
sum_gene[which(log10(sum_gene)>0)]
temp=sum_gene[which(log10(sum_gene)>0)]
top30 <- sum_gene[which(log10(sum_gene)>0)]
top30
LY75 <- blood_TF_gene[which(blood_TF_gene[,2]=='LY75'),]
LY75 <- LY75[order(LY75[,3],decreasing = TRUE),]
LY75_TF_names<- LY75[,1]
for (i in LY75_TF_names){
print(blood_gene_exp$Description[startsWith(blood_gene_exp$Description, as.character(i))] )
}
LY75 <- blood_TF_gene[which(blood_TF_gene[,2]=='LY75'),]
LY75 <- LY75[order(LY75[,3],decreasing = TRUE),]
LY75_TF_names<- LY75[,1]
t(LY75_TF_names)
for (i in LY75_TF_names){
print(blood_gene_exp$Description[startsWith(blood_gene_exp$Description, as.character(i))] )
}
LY75_TF_names <- LY75_TF_names[-c(2,27,28)]
LY75_TF_names <- LY75_TF_names[-c(2,27,28)]
n = 25
LY75_TF_exp <- data.frame(matrix(nrow = 407, ncol = n))
row.names(LY75_TF_exp) <- LY75_TF_names
View(LY75_TF_exp)
LY75 <- blood_TF_gene[which(blood_TF_gene[,2]=='LY75'),]
LY75 <- LY75[order(LY75[,3],decreasing = TRUE),]
LY75_TF_names<- LY75[,1]
t(LY75_TF_names)
LY75_TF_names <- LY75_TF_names[-c(2,27,28)]
n = 25
LY75_TF_exp <- data.frame(matrix(nrow = 407, ncol = n))
row.names(LY75_TF_exp) <- LY75_TF_names
LY75 <- blood_TF_gene[which(blood_TF_gene[,2]=='LY75'),]
LY75 <- LY75[order(LY75[,3],decreasing = TRUE),]
LY75_TF_names<- LY75[,1]
t(LY75_TF_names)
LY75_TF_names <- LY75_TF_names[-c(2,27,28)]
n = 25
LY75_TF_exp <- data.frame(matrix(nrow = 407, ncol = n))
for (i in c(1:n)){
LY75_TF_exp[,i] <- t(blood_gene_exp_norm[which(blood_gene_exp_norm$Description
==as.character(LY75_TF_names[i])),-1])
}
LY75_exp <- t(blood_gene_exp_norm[which(blood_gene_exp_norm$Description=='LY75'),-1])
LY75_TF_exp <- cbind(LY75_TF_exp,LY75_exp)
colnames(LY75_TF_exp) <- c(LY75_TF_names,'LY75')
row.names(LY75_TF_exp) <- colnames(blood_gene_exp_norm)[-1]
View(LY75_TF_exp)
fit_all_LY75 <- lm(LY75 ~ ., data = LY75_TF_exp)
summary(fit_all_LY75)
par(mfrow=c(1,2))
hist(fit_all_LY75$residuals)
qqnorm(fit_all_LY75$residuals,pch=16)
qqline(fit_all_LY75$residuals,col='red')
library(MASS)
bc <- boxcox(fit_all_LY75, plot=T, lambda=seq(0,2,by=0.1))
library(MASS)
bc <- boxcox(fit_all_LY75, plot=T, lambda=seq(-0.5,1,by=0.1))
bc$x[which(bc$y == max(bc$y))]
lambda=0.4
LY75_TF_exp_bc <- LY75_TF_exp
View(LY75_TF_exp_bc)
LY75_TF_exp_bc[,n+1] <- (LY75_TF_exp[,n+1]^lambda-1)/lambda
fit_bc_LY75 <- lm(LY75 ~., data)
lambda=0.4
LY75_TF_exp_bc <- LY75_TF_exp
View(LY75_TF_exp_bc)
LY75_TF_exp_bc[,n+1] <- (LY75_TF_exp[,n+1]^lambda-1)/lambda
fit_bc_LY75 <- lm(LY75 ~., data=LY75_TF_exp_bc)
summary(fit_bc_LY75)
lambda=0.4
LY75_TF_exp_bc <- LY75_TF_exp
LY75_TF_exp_bc[,n+1] <- (LY75_TF_exp[,n+1]^lambda-1)/lambda
fit_bc_LY75 <- lm(LY75 ~., data=LY75_TF_exp_bc)
summary(fit_bc_LY75)
lambda=0.4
LY75_TF_exp_bc <- LY75_TF_exp
LY75_TF_exp_bc[,n+1] <- (LY75_TF_exp[,n+1]^lambda-1)/lambda
fit_bc_LY75 <- lm(LY75 ~., data=LY75_TF_exp_bc)
par(mfrow=c(1,2))
hist(fit_bc_LY75$residuals)
qqnorm(fit_bc_LY75$residuals,pch=16)
qqline(fit_bc_LY75$residuals,col='red')
par(mfrow=c(1,2))
hist(fit_all_LY75$residuals)
qqnorm(fit_all_LY75$residuals,pch=16)
qqline(fit_all_LY75$residuals,col='red')
df <- LY75_TF_exp
response_str <- "LY75 ~ "
end <- length(colnames(df))
R <- colnames(df)[-end] # Initial set of predictors
pval <- rep(NA,length(R)); names(pval) <- R
R_sq <- rep(NA,length(R)); names(R_sq) <- R
for(j in R){
fit <- lm(as.formula(paste0(response_str,j)), data=df)
fitsum <- summary(fit)
pval[j] <- fitsum$coefficients[j,4]
R_sq[j] <- fitsum$r.squared
}
min_pval <- pval[which(pval == min(pval))]
r_sq <- R_sq[which(pval == min(pval))]
R[which(pval == min(pval))]
stats_LY75 <- data.frame(HIF1A = c(min_pval,r_sq),row.names = c("p-val","R-squared"))
fit <- lm(as.formula(paste0(response_str,names(min_pval))), data=df)
R <- R[-which(R == names(min_pval))] # The rest of the predictors
nonstop = TRUE
while(nonstop){
pval <- rep(NA,length(R)); names(pval) <- R
R_sq <- rep(NA,length(R)); names(R_sq) <- R
for(j in R){
fit_loop <- update(fit, as.formula(paste0(".~. +",j)))
fitsum <- summary(fit_loop)
pval[j] <- fitsum$coefficients[j,4]
R_sq[j] <- fitsum$r.squared
}
min_pval <- pval[which(pval == min(pval))]
r_sq <- R_sq[which(pval == min(pval))]
if(min_pval < 0.05){
stats_LY75[,names(min_pval)] <- c(min_pval,r_sq)
fit <- update(fit, as.formula(paste0(".~. +",names(min_pval))))
R <- R[-which(R == names(min_pval))]
}
else{
nonstop = FALSE
forward_model_LY75 <- fit
}
}
stats_LY75
rm(list = 'fit_loop')
rm(list = 'fit')
df <- LY75_TF_exp
response_str <- "LY75 ~ "
end <- length(colnames(df))
R <- colnames(df)[-end] # Initial set of predictors
pval <- rep(NA,length(R)); names(pval) <- R
R_sq <- rep(NA,length(R)); names(R_sq) <- R
for(j in R){
fit <- lm(as.formula(paste0(response_str,j)), data=df)
fitsum <- summary(fit)
pval[j] <- fitsum$coefficients[j,4]
R_sq[j] <- fitsum$r.squared
}
min_pval <- pval[which(pval == min(pval))]
r_sq <- R_sq[which(pval == min(pval))]
R[which(pval == min(pval))]
stats_LY75 <- data.frame(HIF1A = c(min_pval,r_sq),row.names = c("p-val","R-squared"))
fit <- lm(as.formula(paste0(response_str,names(min_pval))), data=df)
R <- R[-which(R == names(min_pval))] # The rest of the predictors
nonstop = TRUE
while(nonstop){
pval <- rep(NA,length(R)); names(pval) <- R
R_sq <- rep(NA,length(R)); names(R_sq) <- R
for(j in R){
fit_loop <- update(fit, as.formula(paste0(".~. +",j)))
fitsum <- summary(fit_loop)
pval[j] <- fitsum$coefficients[j,4]
R_sq[j] <- fitsum$r.squared
}
min_pval <- pval[which(pval == min(pval))]
r_sq <- R_sq[which(pval == min(pval))]
if(min_pval < 0.05){
stats_LY75[,names(min_pval)] <- c(min_pval,r_sq)
fit <- update(fit, as.formula(paste0(".~. +",names(min_pval))))
R <- R[-which(R == names(min_pval))]
}
else{
nonstop = FALSE
forward_model_LY75 <- fit
}
}
stats_LY75
stats_LY75
summary(forward_model_LY75)
plot(as.matrix(stats)[2,], pch=16, xlab="Number of Predictors",ylab = "R_2")
fit_all_LY75 <- lm(LY75 ~ ., data = LY75_TF_exp)
summary(fit_all_LY75)
par(mfrow=c(1,2))
hist(fit_all_LY75$residuals)
qqnorm(fit_all_LY75$residuals,pch=16)
qqline(fit_all_LY75$residuals,col='red')
p = 7
R_sq_LY75 = rep(0,1000)
LY75_TF_control <- data.frame(matrix(nrow = 407, ncol = p))
LY75_TF_control <- cbind(LY75_TF_control,t(LY75_exp))
colnames(LY75_TF_control)[p+1] <- 'LY75'
rand_LY75 = matrix(nrow = 1000, ncol = p)
for (k in c(1:1000)){
rand_LY75[k,] <- sample(c(1:56202),p,replace = FALSE)
rand_LY75_name <- blood_gene_exp_norm$Description[rand_LY75[k,]]
temp <- rand_LY75_name[duplicated(rand_LY75_name)]
while (length(temp)>0){
rand_LY75[k,] <- sample(c(1:56202),p,replace = FALSE)
rand_LY75_name <- blood_gene_exp_norm$Description[rand_LY75[k,]]
temp <- rand_LY75_name[duplicated(rand_LY75_name)]
}
colnames(LY75_TF_control)[1:p] <- rand_LY75_name
for (i in c(1:p)){
LY75_TF_control[,i] <- t(blood_gene_exp_norm[rand_LY75[k,i],-1])
}
fit_control <- summary(lm(LY75 ~. , data = LY75_TF_control))
R_sq_LY75[k] = fit_control$r.squared
}
hist(R_sq_LY75, main = 'Distribution of R_sq of Control Models')
summary(R_sq_LY75)
source('~/web/rendersite.R')
setwd('~/web/')
source('~/web/rendersite.R')
HBB_TF_names <- HBB_TF_names[c(1,3,4,5,8:16)]
n = 13
HBB_TF_exp <- data.frame(matrix(nrow = 407, ncol = n))
for (i in c(1:n)){
HBB_TF_exp[,i] <- t(blood_gene_exp_norm[which(blood_gene_exp_norm$Description
==as.character(HBB_TF_names[i])),-1])
}
HBB_exp <- blood_gene_exp_norm[which(blood_gene_exp_norm$Description=='HBB'),-1]
HBB_TF_exp <- cbind(HBB_TF_exp,t(HBB_exp))
colnames(HBB_TF_exp) <- c(HBB_TF_names,'HBB')
row.names(HBB_TF_exp) <- colnames(blood_gene_exp_norm)[-1]
View(HBB_TF_exp)
summary(forward_model)
p = 6
r = 10
R_sq_HBB = rep(0,r)
HBB_TF_control <- data.frame(matrix(nrow = 407, ncol = p))
HBB_TF_control <- cbind(HBB_TF_control,t(HBB_exp))
colnames(HBB_TF_control)[p+1] <- 'HBB'
rand_HBB = matrix(nrow = r, ncol = p)
for (k in c(1:r)){
rand_HBB[k,] <- sample(c(1:56202),p,replace = FALSE)
rand_HBB_name <- blood_gene_exp_norm$Description[rand_HBB[k,]]
temp <- rand_HBB_name[duplicated(rand_HBB_name)]
while (length(temp)>0){
rand_HBB[k,] <- sample(c(1:56202),p,replace = FALSE)
rand_HBB_name <- blood_gene_exp_norm$Description[rand_HBB[k,]]
temp <- rand_HBB_name[duplicated(rand_HBB_name)]
}
colnames(HBB_TF_control)[1:p] <- rand_HBB_name
for (i in c(1:p)){
HBB_TF_control[,i] <- t(blood_gene_exp_norm[rand_HBB[k,i],-1])
}
fit_control <- summary(lm(HBB ~. , data = HBB_TF_control))
R_sq_HBB[k] = fit_control$r.squared
}
hist(R_sq_HBB, main = 'Distribution of R_sq of Control Models')
summary(R_sq_HBB)
BIC_model <- lm(HBB  ~ KLF4 + SP1 + GATA6 + NFIC + HNF4A + GMEB2, data = HBB_TF_exp)
source('rendersite.R')
source('rendersite.R')
par(mfrow=c(1,2))
hist(fit_control$residuals)
qqnorm(fit_control$residuals,pch=16)
qqline(fit_control$residuals,col='red')
par(mfrow=c(1,2))
hist(BIC_model$residuals)
qqnorm(BIC_model$residuals,pch=16)
qqline(BIC_model$residuals,col='red')
p = 6
r = 100
R_sq_HBB = rep(0,r)
HBB_TF_control <- data.frame(matrix(nrow = 407, ncol = p))
HBB_TF_control <- cbind(HBB_TF_control,t(HBB_exp))
colnames(HBB_TF_control)[p+1] <- 'HBB'
rand_HBB = matrix(nrow = r, ncol = p)
for (k in c(1:r)){
rand_HBB[k,] <- sample(c(1:56202),p,replace = FALSE)
rand_HBB_name <- blood_gene_exp_norm$Description[rand_HBB[k,]]
temp <- rand_HBB_name[duplicated(rand_HBB_name)]
while (length(temp)>0){
rand_HBB[k,] <- sample(c(1:56202),p,replace = FALSE)
rand_HBB_name <- blood_gene_exp_norm$Description[rand_HBB[k,]]
temp <- rand_HBB_name[duplicated(rand_HBB_name)]
}
colnames(HBB_TF_control)[1:p] <- rand_HBB_name
for (i in c(1:p)){
HBB_TF_control[,i] <- t(blood_gene_exp_norm[rand_HBB[k,i],-1])
}
fit_control <- summary(lm(HBB ~. , data = HBB_TF_control))
R_sq_HBB[k] = fit_control$r.squared
}
hist(R_sq_HBB, main = 'Distribution of R_sq of Control Models')
summary(R_sq_HBB)
p = 7
r = 100
R_sq_LY75 = rep(0,r)
LY75_TF_control <- data.frame(matrix(nrow = 407, ncol = p))
LY75_TF_control <- cbind(LY75_TF_control,t(LY75_exp))
colnames(LY75_TF_control)[p+1] <- 'LY75'
rand_LY75 = matrix(nrow = r, ncol = p)
for (k in c(1:r)){
rand_LY75[k,] <- sample(c(1:56202),p,replace = FALSE)
rand_LY75_name <- blood_gene_exp_norm$Description[rand_LY75[k,]]
temp <- rand_LY75_name[duplicated(rand_LY75_name)]
while (length(temp)>0){
rand_LY75[k,] <- sample(c(1:56202),p,replace = FALSE)
rand_LY75_name <- blood_gene_exp_norm$Description[rand_LY75[k,]]
temp <- rand_LY75_name[duplicated(rand_LY75_name)]
}
colnames(LY75_TF_control)[1:p] <- rand_LY75_name
for (i in c(1:p)){
LY75_TF_control[,i] <- t(blood_gene_exp_norm[rand_LY75[k,i],-1])
}
fit_control <- summary(lm(LY75 ~. , data = LY75_TF_control))
R_sq_LY75[k] = fit_control$r.squared
}
hist(R_sq_LY75, main = 'Distribution of R_sq of Control Models')
summary(R_sq_LY75)
BIC_model <- lm(HBB  ~ KLF4 + SP1 + GATA6 + NFIC + HNF4A + GMEB2, data = HBB_TF_exp)
summary(BIC_model)
source('rendersite.R')
source('rendersite.R')
